require_relative 'helpers/indented_grid'

Voom::Presenters.define(:events) do
  helpers Demo::Helpers::IndentedGrid
  attach :top_nav
  attach :events_drawer


  indented_grid do
    heading 'Events'
    body 'Events are able to be attached to most components. ',
         'Common examples include `click` and `change` events. ',
         "To see how an individual component handles events, visit the [component page](#{presenters_path(:components)})"

    subheading 'Dialog'
    button 'dialog' do
      event :click do
        dialog :my_dialog
      end
    end
    attach :show_dialog

    subheading 'Replaces'
    button 'replaces' do
      event :click do
        replaces :replace_me, :replace_text, text: "I was replaced"
      end
    end
    attach :replace_text

    subheading 'Toggle Visibility'
    button 'toggle visiblity' do
      event :click do
        toggle_visiblity :toggle_me
      end
    end
    heading 'Sometimes I appear', id: :toggle_me

    subheading 'Snackbar'
    button 'snackbar' do
      event :click do
        snackbar 'I want a snack!'
      end
    end

    subheading context['reloaded'] ? "Reloaded" : 'Loads'
    button 'loads' do
      event :click do
        loads :events, reloaded: true
      end
    end
    heading context['reloaded'] ? "Reloaded" : 'Loaded'

    title "A Note on errors:"
    body 'The following event actions will display an error.',
         nil,
         'Errors are automatically displayed in the following locations.',
         '1. Field/input level errors will display on the field/input.',
         '1. At the top of all forms.',
         '1. At the top of all dialogs.',
         '1. At the top of all cards.',
         '1. At the top of content blocks if they turn on show_errors.',
         '1. At the top of the page', level: 2

    body 'The closest error element will be used.'\
          'If you want to control where errors appear. Use the attribute `show_errors=(true|false)`'


    subheading 'Update'
    body 'issues a PUT to the passed path'
    content shows_errors: true do
      button 'updates' do
        event :click do
          updates 'updatepath', {optional: :params}
        end
      end

      subheading 'Delete'
      body 'issues a DELETE to the passed path'
      content shows_errors: true do
        button 'deletes' do
          event :click do
            deletes 'deletepath', {optional: :params}
          end
        end
        subheading 'Posts'
        body "issues a POST to the passed path\nAlias: creates"
        content do
          button 'posts' do
            event :click do
              posts 'postpath', {optional: :params}
            end
          end
        end
      end
    end
  end
end
